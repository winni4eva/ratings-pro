{"version":3,"sources":["shared/validator/custom-validator.service.ts"],"names":[],"mappings":";;;;;;;YAEA;gBAAA;gBAaA,CAAC;gBAXU,0BAAU,GAAjB,UAAkB,OAAoB;oBAElC,IAAI,YAAY,GAAG,sEAAsE,CAAC;oBAE1F,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1F,MAAM,CAAC,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC;oBAC3C,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAEL,sBAAC;YAAD,CAbA,AAaC,IAAA;YAbD,6CAaC,CAAA","file":"shared/validator/custom-validator.service.js","sourcesContent":["import {FormControl} from '@angular/forms';\r\n\r\nexport class CustomValidator{\r\n\r\n    static mailFormat(control: FormControl): ValidationResult {\r\n\r\n        var EMAIL_REGEXP = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n        if (control.value != \"\" && (control.value.length <= 5 || !EMAIL_REGEXP.test(control.value))) {\r\n            return { \"incorrectMailFormat\": true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\ninterface ValidationResult {\r\n    [key: string]: boolean;\r\n}"],"sourceRoot":"/source/"}