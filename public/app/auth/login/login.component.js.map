{"version":3,"sources":["auth/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAyEA;gBAUI,wBACsB,aAA2B,EAC3B,GAAgB,EAChB,MAAc,EACd,aAAmC;oBAHnC,kBAAa,GAAb,aAAa,CAAc;oBAC3B,QAAG,GAAH,GAAG,CAAa;oBAChB,WAAM,GAAN,MAAM,CAAQ;oBACd,kBAAa,GAAb,aAAa,CAAsB;oBAVjD,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAC;gBAMyD,CAAC;gBAE5D,iCAAQ,GAAR;oBAEM,EAAE,CAAA,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;wBAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAEvE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;wBAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,0CAAe,CAAC,UAAU,CAAC,CAAE;wBAC/D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;qBACjE,CAAC,CAAC;gBACT,CAAC;gBAED,8BAAK,GAAL,UAAM,KAAqB,EAAE,OAAgB;oBAA7C,iBAcC;oBAbG,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC;wBAAC,MAAM,CAAC;oBAEpB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC;yBAC9B,SAAS,CAAE,UAAA,QAAQ;wBACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACtB,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;wBAC5C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACpC,CAAC,EACD,UAAA,KAAK;wBACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC7C,CAAC,CACJ,CAAC;gBACV,CAAC;gBAED,+BAAM,GAAN;oBAAA,iBAcC;oBAZG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;yBACzB,SAAS,CAAE,UAAA,QAAQ;wBACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACtB,KAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;wBACtC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACpC,CAAC,EACD,UAAA,KAAK;wBACD,KAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;wBACtC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CACJ,CAAC;gBACV,CAAC;gBAxHL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,4/GA2DT;qBACJ,CAAC;;kCAAA;gBA2DF,qBAAC;YAAD,CAzDA,AAyDC,IAAA;YAzDD,2CAyDC,CAAA","file":"auth/login/login.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { CustomValidator } from '../../shared/validator/custom-validator.service';\r\nimport { LoginInterface } from './login.interface';\r\nimport { LoginService } from './login.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {ReflectiveInjector} from '@angular/core';\r\nimport {NotificationsService} from 'angular2-notifications';\r\n\r\n@Component({\r\n    selector: 'my-login',\r\n    template: `\r\n      <style>\r\n          .myLabel{margin:0px !important;}\r\n          .myInput{\r\n              width:100% !important;\r\n              height:80% !important;\r\n              outline:none !important;\r\n              font-size:20px !important;\r\n          }\r\n          .inputError{color:red}\r\n      </style> \r\n\r\n      <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n      <div class=\"logmod\">\r\n          <div class=\"logmod__wrapper\">\r\n\r\n            <span class=\"logmod__close\">Close</span>\r\n\r\n            <div class=\"logmod__container\">\r\n              <ul class=\"logmod__tabs\">\r\n                <li data-tabtar=\"lgm-4\" [ngClass]=\"\"><a [routerLink]=\"['/login']\">Login</a></li>\r\n                <!--<li data-tabtar=\"lgm-1\" [ngClass]=\"\"><a [routerLink]=\"['/auth/signup']\">Sign Up</a></li>-->\r\n              </ul>\r\n\r\n              <div class=\"logmod__tab-wrapper\"><!-- Login / Signup Container -->\r\n                  <div class=\"logmod__tab lgm-2\">\r\n                    <div class=\"logmod__heading\">\r\n                    <span class=\"logmod__heading-subtitle\">Enter your email and password <strong>to sign in</strong></span>\r\n                    </div> \r\n                    <div class=\"logmod__form\">\r\n                    <form autocomplete=\"off\" [formGroup]=\"_loginForm\" (ngSubmit)=\"login(_loginForm.value, _loginForm.valid)\" novalidate class=\"simform\">\r\n                        <div class=\"sminputs\">\r\n                        <div class=\"input full\">\r\n                            <!--<label class=\"string optional\" for=\"user-name\">Email*</label>-->\r\n                            <input class=\"string optional myInput\" formControlName=\"email\" maxlength=\"255\" id=\"user-email\" placeholder=\"Email\" type=\"email\" size=\"50\" />\r\n                            <small [hidden]=\"_loginForm.controls.email.pristine || !_loginForm.controls.email.hasError('required')\" class=\"inputError\">Email is required.</small>\r\n                            <small [hidden]=\"!_loginForm.controls.email.hasError('incorrectMailFormat')\" class=\"inputError\">Email format should be <i>example@example.com</i>.</small>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"sminputs\">\r\n                        <div class=\"input full\">\r\n                            <!--<label class=\"string optional\" for=\"user-pw\">Password *</label>-->\r\n                            <input class=\"string optional myInput\" formControlName=\"password\" maxlength=\"255\" id=\"user-pw\" placeholder=\"Password\" type=\"password\" size=\"50\" />\r\n                            <small [hidden]=\"_loginForm.controls.password.pristine || !_loginForm.controls.password.hasError('required')\" class=\"inputError\">Password is required.</small>\r\n                            <small [hidden]=\"!_loginForm.controls.password.hasError('minLength')\" class=\"inputError\">Passwors must be at least 5 xters long.</small>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"simform__actions\">\r\n                        <button class=\"sumbit\" name=\"commit\" type=\"sumbit\" [disabled]=\"!_loginForm.valid\">Log In</button>\r\n                        <span class=\"simform__actions-sidetext\"><a class=\"special\" role=\"link\" href=\"#\">Forgot your password?<br>Click here</a></span>\r\n                        </div> \r\n                    </form>\r\n                    </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    `\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n    private _loginForm;\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    };\r\n\r\n    constructor(\r\n                  private _loginService: LoginService,\r\n                  private _fb: FormBuilder,\r\n                  private router: Router,\r\n                  private _notification: NotificationsService){}\r\n\r\n    ngOnInit() {\r\n          \r\n          if(this._loginService.getIsLoggedIn()) this.router.navigate(['admin']); \r\n\r\n          this._loginForm = this._fb.group({\r\n              email: ['', [Validators.required, CustomValidator.mailFormat] ],\r\n              password: ['', [Validators.required, Validators.minLength(5)]]\r\n          });\r\n    }\r\n\r\n    login(model: LoginInterface, isValid: boolean){\r\n        if(!isValid) return;\r\n\r\n        this._loginService.postLogin(model)\r\n            .subscribe( response => {\r\n                    console.log(response);\r\n                    this._loginService.setAuthDetails(response);\r\n                    this.router.navigate(['admin']); \r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    this._notification.error('Error', error);\r\n                }\r\n            );\r\n    }\r\n\r\n    logout(){\r\n\r\n        this._loginService.getLogout()\r\n            .subscribe( response => {\r\n                    console.log(response);\r\n                    this._loginService.cleanAuthDetails();\r\n                    this.router.navigate(['login']); \r\n                },\r\n                error => {\r\n                    this._loginService.cleanAuthDetails();\r\n                    this.router.navigate(['login']); \r\n                    console.log(error);\r\n                }\r\n            );\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}