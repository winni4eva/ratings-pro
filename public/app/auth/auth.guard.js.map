{"version":3,"sources":["auth/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAEI,mBACoB,MAAc,EACd,WAAyB,EACzB,cAA8B;oBAF9B,WAAM,GAAN,MAAM,CAAQ;oBACd,gBAAW,GAAX,WAAW,CAAc;oBACzB,mBAAc,GAAd,cAAc,CAAgB;gBAAE,CAAC;gBAErD,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;oBAEjE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;wBAAC,MAAM,CAAC,IAAI,CAAC;oBAClD,wEAAwE;oBACxE,wCAAwC;oBACxC,oBAAoB;oBACpB,IAAI;oBAEJ,eAAe;oBAEf,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA,6BAA6B;oBAE9D,MAAM,CAAC,KAAK,CAAC;oBAEb,qFAAqF;gBACzF,CAAC;gBA3BL;oBAAC,iBAAU,EAAE;;6BAAA;gBA4Bb,gBAAC;YAAD,CA3BA,AA2BC,IAAA;YA3BD,iCA2BC,CAAA","file":"auth/auth.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from './login/login.service';\r\nimport{ StorageService } from '../shared/storage/storage.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    \r\n    constructor(\r\n                private router: Router,\r\n                private authService: LoginService,\r\n                private storageService: StorageService){}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n\r\n        if (this.authService.getIsLoggedIn()) return true;\r\n        //  if (state.url !== '/login' && !this.authService.isAuthenticated()) {\r\n        //     this.router.navigate(['/login']);\r\n        //     return false;\r\n        // }\r\n\r\n        // return true;\r\n        \r\n        //Todo Logout on server\r\n        this.storageService.remove('rToken');\r\n        this.storageService.remove('rUser');\r\n        this.storageService.remove('rAuth');\r\n        this.router.navigate(['/login']);// Navigate to the login page\r\n\r\n        return false;\r\n\r\n        //this.authService.redirectUrl = state.url;// Store the attempted URL for redirecting\r\n    }\r\n}"],"sourceRoot":"/source/"}