{"version":3,"sources":["admin2/report/report.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAiWG;gBAmEE,yDAAyD;gBAEzD,yBACuB,cAA6B,EAC7B,aAAmC,EACnC,YAAyB,EACzB,cAA6B,EAC7B,cAA6B;oBAJ7B,mBAAc,GAAd,cAAc,CAAe;oBAC7B,kBAAa,GAAb,aAAa,CAAsB;oBACnC,iBAAY,GAAZ,YAAY,CAAa;oBACzB,mBAAc,GAAd,cAAc,CAAe;oBAC7B,mBAAc,GAAd,cAAc,CAAe;oBA5D5C,aAAQ,GAAG;wBAChB,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;oBAEA,wBAAmB,GAAG;wBACnB,WAAW,EAAE,OAAO;wBACpB,UAAU,EAAE,YAAY;wBACxB,cAAc,EAAE,IAAI;wBACpB,YAAY,EAAE,IAAI;wBAClB,MAAM,EAAE,MAAM;wBACd,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,KAAK;wBACb,YAAY,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAC;wBAC7C,oBAAoB,EAAE,MAAM;qBAC/B,CAAC;oBAMO,eAAU,GAAG,UAAU,CAAC;oBAExB,gBAAW,GAAE;wBACE,UAAU,EAAC,KAAK;wBAChB,SAAS,EAAC,KAAK;wBACf,SAAS,EAAC,KAAK;wBACf,UAAU,EAAC,KAAK;qBACf,CAAC;oBAIjB,eAAU,GAAe,EAAE,CAAC;oBAE7B,kBAAa,GAAe,EAAE,CAAC;oBAE/B,qBAAgB,GAAe,EAAE,CAAC;oBAEjC,kBAAa,GAAe,EAAE,CAAC;oBAE/B,mBAAc,GAAe,EAAE,CAAC;oBAQhC,0BAAqB,GAAW,EAAE,CAAC;oBAEnC,yBAAoB,GAAW,EAAE,CAAC;gBAUzC,CAAC;gBAED,kCAAQ,GAAR;oBAAA,iBAsBC;oBApBC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACvC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAhC,CAAgC,EAC1C,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;oBAEF,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAClC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,EAA9B,CAA8B,EACxC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAClC,CAAC;oBAEF,uBAAuB;oBACvB,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;oBACrB,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;oBACrB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBACjB,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;oBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAChC,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;gBACrB,CAAC;gBAED,qCAAW,GAAX,cAAc,CAAC;gBAGf,gCAAM,GAAN,UAAO,MAAM;oBACT,EAAE,CAAA,CAAC,MAAM,IAAE,QAAQ,CAAC,CAAA,CAAC;wBACf,IAAI,GAAG,GAAG,EAAE,CAAC;wBACb,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;wBACxC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;wBACrB,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;wBAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACf,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;wBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAC3B,CAAC;oBAAA,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,IAAE,QAAQ,CAAC,CAAA,CAAC;wBACrB,IAAI,GAAG,GAAG,EAAE,CAAC;wBACb,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;wBACxC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;wBACrB,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;wBAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACf,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;wBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAC3B,CAAC;gBACL,CAAC;gBAED,mCAAS,GAAT,UAAU,MAAM;oBAAhB,iBAyBC;oBAvBC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,UAAA,MAAM;wBACF,MAAM,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;4BACtB,KAAK,UAAU;gCACX,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;gCAC/B,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC;gCAChC,KAAK,CAAC;4BACV,KAAK,UAAU;gCACX,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;gCAC/B,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC;gCACjC,KAAK,CAAC;4BACV,KAAK,SAAS;gCACV,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC;gCAChC,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC;gCACtC,KAAK,CAAC;4BACV;gCACI,KAAK,CAAC;wBACd,CAAC;wBACD,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAA;oBAC/D,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBAEJ,CAAC;gBAED,uCAAa,GAAb,UAAc,KAAS,EAAE,MAAM;oBAC7B,EAAE,CAAA,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;wBAC5B,MAAM,CAAC;oBACX,CAAC;oBACD,EAAE,CAAA,CAAC,MAAM,IAAE,MAAM,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;oBACzE,CAAC;oBAAA,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,IAAE,IAAI,CAAC,CAAC,CAAC;wBACpB,IAAI,GAAG,GAAG,EAAE,CAAC;wBACb,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;wBACrB,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;wBACrB,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;wBACrC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;wBAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;wBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAC1B,cAAc;wBACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAChC,IAAI,CAAC,iBAAiB,GAAC,EAAE,CAAC;wBAC1B,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;oBACvB,CAAC;oBACD,iLAAiL;gBACnL,CAAC;gBAED,gCAAM,GAAN,UAAO,QAAQ;oBAAf,iBAQD;oBANG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAc,QAAQ,8DAA2D,CAAC,CAAC;oBACnH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;yBACxC,SAAS,CACN,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAlE,CAAkE,EAC7E,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,sBAAoB,QAAQ,YAAS,CAAC,EAAxE,CAAwE,CACpF,CAAC;gBAClB,CAAC;gBAED,sCAAY,GAAZ;oBACI,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;oBACrB,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;oBACrB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAA,kCAAkC;oBACnD,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA,kCAAkC;oBACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAChC,IAAI,CAAC,iBAAiB,GAAC,EAAE,CAAC;oBAC1B,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;gBACvB,CAAC;gBAED,0CAAgB,GAAhB,UAAiB,IAAI;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAC7C,CAAC;gBAniBF;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAG,WAAW;wBACtB,QAAQ,EAAG,0moBAoVV;qBACJ,CAAC;;mCAAA;gBA8MF,sBAAC;YAAD,CA7MA,AA6MC,IAAA;YA7MD,6CA6MC,CAAA","file":"admin2/report/report.component.js","sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { ZingChart } from '../chart/zingchart.component';\r\nimport { Chart } from '../chart/chart.model';\r\nimport { ReportService } from './report.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { FileService } from '../../shared/file-generator/file.service';\r\nimport { BranchService } from '../branch/branch.service';\r\nimport { SurveyService } from '../survey/survey.service';\r\n\r\n   @Component({\r\n       selector : 'my-report',\r\n       template:  `\r\n       <style>\r\n            #exTab1 .tab-content {\r\n            color : white;\r\n            background-color: white;\r\n            padding : 5px 15px;\r\n            }\r\n\r\n            #exTab2 h3 {\r\n            color : white;\r\n            background-color: white;\r\n            padding : 5px 15px;\r\n            }\r\n\r\n            /* remove border radius for the tab */\r\n\r\n            #exTab1 .nav-pills > li > a {\r\n            border-radius: 0;\r\n            }\r\n\r\n            /* change border radius for the tab , apply corners on top*/\r\n\r\n            #exTab3 .nav-pills > li > a {\r\n            border-radius: 4px 4px 0 0 ;\r\n            }\r\n\r\n            #exTab3 .tab-content {\r\n            color : white;\r\n            background-color: white;\r\n            padding : 5px 15px;\r\n            }\r\n       </style>\r\n          \r\n          <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n          <!--<zingchart [chart]=\"lineChart\"></zingchart>-->\r\n\r\n            <my-content [title]=\"'Report'\">\r\n\r\n                <div id=\"exTab1\" class=\"\">\t\r\n                <ul  class=\"nav nav-pills\">\r\n                    <li class=\"active\">\r\n                        <a  href=\"#1a\" data-toggle=\"tab\" (click)=\"clickedTab='Overview';updateReport()\">Overview</a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#3a\" data-toggle=\"tab\" (click)=\"clickedTab='Ratings';updateReport()\">Ratings</a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#4a\" data-toggle=\"tab\" (click)=\"clickedTab='Branches';updateReport()\">Branches</a>\r\n                    </li>\r\n                    \r\n                    <!--\r\n                    <li>\r\n                        <a href=\"#2a\" data-toggle=\"tab\" (click)=\"clickedTab='Surveys';updateReport()\">Surveys</a>\r\n                    </li>\r\n                    -->\r\n                </ul>\r\n\r\n                <div class=\"img-thumbnail\" style=\"width:200%\" *ngIf=\"clickedTab=='Overview'\">\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('raw')\">Raw Data</a>\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('chart')\">Chart</a>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedBranchId\" (change)=\"filter('branch')\">\r\n                            <option [value]=\"\">--Filter Branch--</option>\r\n                            <option [value]=\"branch.id\" *ngFor=\"let branch of _branches\">{{branch.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedSurveyId\" (change)=\"filter('survey')\">\r\n                            <option [value]=\"\">--Filter Survey--</option>\r\n                            <option [value]=\"survey.id\" *ngFor=\"let survey of _surveys\">{{survey.title}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'to')\" *ngIf=\"fromDatePickerSet\" class=\"pull-right\"></my-date-picker>\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'from')\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\" class=\"pull-right\"></my-date-picker>\r\n                </div>\r\n\r\n                <div class=\"img-thumbnail\" style=\"width:200%\" *ngIf=\"clickedTab=='Ratings'\">\r\n\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('raw')\">Raw Data</a>\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('chart')\">Chart</a>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedBranchId\" (change)=\"filter('branch')\">\r\n                            <option [value]=\"\">--Filter Branch--</option>\r\n                            <option [value]=\"branch.id\" *ngFor=\"let branch of _branches\">{{branch.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedSurveyId\" (change)=\"filter('survey')\">\r\n                            <option [value]=\"\">--Filter Survey--</option>\r\n                            <option [value]=\"survey.id\" *ngFor=\"let survey of _surveys\">{{survey.title}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'to')\" *ngIf=\"fromDatePickerSet\" class=\"pull-right\"></my-date-picker>\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'from')\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\" class=\"pull-right\"></my-date-picker>\r\n                </div>\r\n\r\n                <div class=\"img-thumbnail\" style=\"width:200%\" *ngIf=\"clickedTab=='Branches'\">\r\n\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('raw')\">Raw Data</a>\r\n                    <a class=\"btn btn-primary pull-left\" (click)=\"changeReportType('chart')\">Chart</a>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedBranchId\" (change)=\"filter('branch')\">\r\n                            <option [value]=\"\">--Filter Branch--</option>\r\n                            <option [value]=\"branch.id\" *ngFor=\"let branch of _branches\">{{branch.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group pull-left\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"selectedSurveyId\" (change)=\"filter('survey')\">\r\n                            <option [value]=\"\">--Filter Survey--</option>\r\n                            <option [value]=\"survey.id\" *ngFor=\"let survey of _surveys\">{{survey.title}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'to')\" *ngIf=\"fromDatePickerSet\" class=\"pull-right\"></my-date-picker>\r\n                    <my-date-picker [options]=\"myDatePickerOptions\" (dateChanged)=\"onDateChanged($event,'from')\" *ngIf=\"this._tabOptions[clickedTab]=='raw'\" class=\"pull-right\"></my-date-picker>\r\n                </div>\r\n\r\n                <div class=\"tab-content clearfix img-thumbnail\" style=\"width:200%\">\r\n\r\n                    <div class=\"tab-pane active\" id=\"1a\" *ngIf=\"clickedTab=='Overview' && _tabOptions[clickedTab]=='chart'\">\r\n                        <zingchart *ngFor=\"let chart of piecharts\" [chart]=\"chart\" ></zingchart>\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane active\" id=\"1a\" *ngIf=\"clickedTab=='Overview' && _tabOptions[clickedTab]=='raw'\">\r\n                        <div class=\"content table-responsive table-full-width\">\r\n\r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"1\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n\r\n                            <div class=\"pull-right\">\r\n                                <a (click)=\"export('pdf')\" class=\"btn btn-default\">Export To PDF</a>\r\n                                <!--<a (click)=\"export('excel')\" class=\"btn btn-default\">Export To Excel</a>-->\r\n                            </div>\r\n\r\n                            <div class=\"form-group pull-right\">\r\n                                <select class=\"form-control\" [(ngModel)]=\"_overviewItemsPerpage\">\r\n                                    <option [value]=\"10\" [selected]=\"\">--Items Per Page--</option>\r\n                                    <option [value]=\"10\">10</option>\r\n                                    <option [value]=\"20\">20</option>\r\n                                    <option [value]=\"50\">50</option>\r\n                                    <option [value]=\"100\">100</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <table class=\"table table-hover table-striped\">\r\n                                <thead>\r\n                                    <th style=\"color:black\">#</th>\r\n                                    <th style=\"color:black\">Questionaire</th>\r\n                                    <th style=\"color:black\">Branch</th>\r\n                                    <th style=\"color:black\">Previous Answer</th>\r\n                                    <th style=\"color:black\">Answer</th>\r\n                                    <th style=\"color:black\">Score</th>\r\n                                    <th style=\"color:black\">Icon</th>\r\n                                    <th style=\"color:black\">Date Created</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let data of overViewtable | paginate: {itemsPerPage: _overviewItemsPerpage, currentPage:page, id: '1'};let i=index\">\r\n                                        <td style=\"color:black\">{{i+1}}</td>\r\n                                        <td style=\"color:black\">{{data?.survey?.title}}</td>\r\n                                        <td style=\"color:black\">{{data?.branch?.name}}</td>\r\n                                        <td style=\"color:black\">{{data?.previous_response?.name}}</td>\r\n                                        <td style=\"color:black\">{{data?.response?.name}}</td>\r\n                                        <td style=\"color:black\">{{data?.response?.rater?.score}}</td>\r\n                                        <td style=\"color:black\">\r\n                                            <img class=\"img-thumbnail\" style=\"width:50px;height:50px\" [src]=\"data?.response?.rater?.image?.src\" alt=\"Image\">\r\n                                        </td>\r\n                                        <td style=\"color:black\">{{data?.created_at}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"1\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane active\" id=\"3a\" *ngIf=\"clickedTab=='Branches' && _tabOptions[clickedTab]=='chart'\">\r\n                        <zingchart *ngFor=\"let chart of barcharts\" [chart]=\"chart\" ></zingchart>\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane active\" id=\"3a\"  *ngIf=\"clickedTab=='Branches' && _tabOptions[clickedTab]=='raw'\">\r\n                        \r\n                        <div class=\"content table-responsive table-full-width\">\r\n                \r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"3\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n                            <!--\r\n                            <div class=\"pull-right\">\r\n                                <a (click)=\"export('pdf')\" class=\"btn btn-default\">Export To PDF</a>\r\n                                <a (click)=\"export('excel')\" class=\"btn btn-default\">Export To Excel</a>\r\n                            </div>\r\n                            -->\r\n                            <div class=\"form-group pull-right\">\r\n                                <select class=\"form-control\" [(ngModel)]=\"_ratingsItemsPerPage\">\r\n                                    <option [value]=\"10\" [selected]=\"\">--Items Per Page--</option>\r\n                                    <option [value]=\"10\">10</option>\r\n                                    <option [value]=\"20\">20</option>\r\n                                    <option [value]=\"30\">50</option>\r\n                                    <option [value]=\"40\">100</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <table class=\"table table-hover table-striped\">\r\n                                <thead>\r\n                                    <th style=\"color:black\">#</th>\r\n                                    <th style=\"color:black\">Branch</th>\r\n                                    <th style=\"color:black\">Survey</th>\r\n                                    <th style=\"color:black\">Average Score</th>\r\n                                    <th style=\"color:black\">Icon</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let branch of _branchesTable | paginate: {itemsPerPage: _ratingsItemsPerPage, currentPage:page, id: '3'};let i=index\">\r\n                                        <td style=\"color:black\">{{i+1}}</td>\r\n                                        <td style=\"color:black\">{{branch?.branch}}</td>\r\n                                        <td style=\"color:black\">{{branch?.survey}}</td>\r\n                                        <td style=\"color:black\">{{branch?.averageScore}}</td>\r\n                                        <td style=\"color:black\">\r\n                                            <img class=\"img-thumbnail\" style=\"width:50px;height:50px\" [src]=\"branch?.image\" alt=\"Image\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"3\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane active\" id=\"3a\" *ngIf=\"clickedTab=='Ratings' && _tabOptions[clickedTab]=='chart'\">\r\n                        <zingchart *ngFor=\"let chart of ratingsbarcharts\" [chart]=\"chart\" ></zingchart>\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane active\" id=\"3a\"  *ngIf=\"clickedTab=='Ratings' && _tabOptions[clickedTab]=='raw'\">\r\n                        \r\n                        <div class=\"content table-responsive table-full-width\">\r\n                \r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"2\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n\r\n                            <div class=\"pull-right\">\r\n                                <a (click)=\"export('pdf')\" class=\"btn btn-default\">Export To PDF</a>\r\n                                <!--<a (click)=\"export('excel')\" class=\"btn btn-default\">Export To Excel</a>-->\r\n                            </div>\r\n\r\n                            <div class=\"form-group pull-right\">\r\n                                <select class=\"form-control\" [(ngModel)]=\"_ratingsItemsPerPage\">\r\n                                    <option [value]=\"10\" [selected]=\"\">--Items Per Page--</option>\r\n                                    <option [value]=\"10\">10</option>\r\n                                    <option [value]=\"20\">20</option>\r\n                                    <option [value]=\"30\">50</option>\r\n                                    <option [value]=\"40\">100</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <table class=\"table table-hover table-striped\">\r\n                                <thead>\r\n                                    <th style=\"color:black\">#</th>\r\n                                    <th style=\"color:black\">Survey</th>\r\n                                    <th style=\"color:black\">Branch</th>\r\n                                    <th style=\"color:black\">Rater</th>\r\n                                    <th style=\"color:black\">Score</th>\r\n                                    <th style=\"color:black\">Responses</th>\r\n                                    <th style=\"color:black\">Average Score</th>\r\n                                    <th style=\"color:black\">Response Rate (%)</th>\r\n                                    <th style=\"color:black\">Response Rate (d)</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let rating of _ratingsTable | paginate: {itemsPerPage: _ratingsItemsPerPage, currentPage:page, id: '2'};let i=index\">\r\n                                        <td style=\"color:black\">{{i+1}}</td>\r\n                                        <td style=\"color:black\">{{rating?.survey}}</td>\r\n                                        <td style=\"color:black\">{{rating?.branch}}</td>\r\n                                        <td style=\"color:black\">{{rating?.responseName}}</td>\r\n                                        <td style=\"color:black\">{{rating?.score}}</td>\r\n                                        <td style=\"color:black\">{{rating?.numberOfResponses}}</td>\r\n                                        <td style=\"color:black\">{{rating?.averageScore}}</td>\r\n                                        <td style=\"color:black\">{{rating?.percentageScore}}</td>\r\n                                        <td style=\"color:black\">{{rating?.decimalScore}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <pagination-controls (pageChange)=\"page = $event\" id=\"2\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                class=\"pull-right\"\r\n                                style=\"pointer:cursor\">\r\n                            </pagination-controls>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!--\r\n                    <div class=\"tab-pane\" id=\"2a\" *ngIf=\"clickedTab=='Surveys'\">\r\n                        <div class=\"pull-right\">\r\n                            <a (click)=\"export('pdf')\" class=\"btn btn-default\">Export To PDF</a>\r\n                            <a (click)=\"export('excel')\" class=\"btn btn-default\">Export To Excel</a>\r\n                        </div>\r\n                        <zingchart *ngFor=\"let chart of charts\" [chart]=\"chart\" ></zingchart>\r\n                        <zingchart *ngFor=\"let chart of stackedbarcharts\" [chart]=\"chart\" ></zingchart>\r\n                    </div>\r\n                    -->\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </my-content>\r\n       `  \r\n   })\r\n   export class ReportComponent implements OnInit, OnDestroy {\r\n        \r\n     charts: any; //Chart[];\r\n\r\n     barcharts: any;\r\n\r\n     lineChart;\r\n\r\n     piecharts: any;\r\n\r\n     stackedbarcharts: any;\r\n\r\n     multistackedbarchart;\r\n\r\n     private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n     myDatePickerOptions = {\r\n        todayBtnTxt: 'Today',\r\n        dateFormat: 'yyyy-mm-dd',\r\n        firstDayOfWeek: 'mo',\r\n        sunHighlight: true,\r\n        height: '34px',\r\n        width: '260px',\r\n        inline: false,\r\n        disableUntil: {year: 2016, month: 8, day: 10},\r\n        selectionTxtFontSize: '16px'\r\n    };\r\n\r\n     selectedBranchId;\r\n\r\n     selectedSurveyId;\r\n\r\n     private clickedTab = 'Overview';\r\n\r\n     private _tabOptions ={\r\n                            'Overview':'raw',\r\n                            'Surveys':'raw',\r\n                            'Ratings':'raw',\r\n                            'Branches':'raw'\r\n                            };\r\n\r\n     private fromDatePickerSet; \r\n\r\n     private dateFilter: Array<any> = [];\r\n\r\n     public overViewtable: Array<any> = [];\r\n\r\n     public ratingsbarcharts: Array<any> = [];\r\n\r\n     private _ratingsTable: Array<any> = [];\r\n\r\n     private _branchesTable: Array<any> = [];\r\n\r\n     public data;\r\n\r\n     private _branches;\r\n\r\n     private _surveys;\r\n\r\n     private _overviewItemsPerpage: number = 10;\r\n\r\n     private _ratingsItemsPerPage: number = 10;\r\n\r\n     //@Input('taxonomySeparator') taxonomy_seperator: string;\r\n\r\n     constructor (\r\n                    private _reportService: ReportService, \r\n                    private _notification: NotificationsService,\r\n                    private _fileService: FileService,\r\n                    private _branchService: BranchService,\r\n                    private _surveyService: SurveyService) {\r\n      }\r\n\r\n      ngOnInit(){\r\n          \r\n        this._branchService.getBranches().subscribe(\r\n            result => this._branches = result.branches,\r\n            error => this._notification.error('Error', error)\r\n        );\r\n        \r\n        this._surveyService.getSurveys().subscribe(\r\n                result => this._surveys = result.surveys,\r\n                error => console.log(error)\r\n        );\r\n\r\n        //Fetch Overview Report\r\n        var obj = {};\r\n        obj['branchId'] = '';\r\n        obj['surveyId'] = '';\r\n        obj['from'] = '';\r\n        obj['tab'] = this.clickedTab;\r\n        obj['to'] = '';\r\n        this.dateFilter.push(obj);\r\n        this.getReport(this.dateFilter);\r\n        this.dateFilter=[];\r\n      }\r\n\r\n      ngOnDestroy(){}\r\n\r\n\r\n      filter(option){\r\n          if(option=='branch'){\r\n                var obj = {};\r\n                obj['branchId'] = this.selectedBranchId;\r\n                obj['surveyId'] = '';\r\n                obj['tab'] = this.clickedTab;\r\n                obj['to'] = '';\r\n                obj['from'] = '';\r\n                this.dateFilter.push(obj);\r\n                this.getReport(this.dateFilter);\r\n                this.dateFilter = [];\r\n          }else if(option=='survey'){\r\n                var obj = {};\r\n                obj['surveyId'] = this.selectedSurveyId;\r\n                obj['branchId'] = '';\r\n                obj['tab'] = this.clickedTab;\r\n                obj['to'] = '';\r\n                obj['from'] = '';\r\n                this.dateFilter.push(obj);\r\n                this.getReport(this.dateFilter);\r\n                this.dateFilter = [];\r\n          }\r\n      }\r\n\r\n      getReport(filter){\r\n        \r\n        this._reportService.getReport(filter).subscribe(\r\n            result => {\r\n                switch (this.clickedTab) {\r\n                    case 'Overview':\r\n                        this.piecharts = result.report;\r\n                        this.overViewtable = result.raw;\r\n                        break;\r\n                    case 'Branches':\r\n                        this.barcharts = result.report;\r\n                        this._branchesTable = result.raw;\r\n                        break;\r\n                    case 'Ratings':\r\n                        this._ratingsTable = result.raw;\r\n                        this.ratingsbarcharts = result.report;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this._notification.success('Success', 'Reports updated...')\r\n            },\r\n            error => this._notification.error('Error', error)\r\n        );\r\n\r\n      }\r\n\r\n      onDateChanged(event:any, option) {\r\n        if(new Date(event.jsdate).toLocaleDateString() == \"1/1/1970\") {\r\n            this.fromDatePickerSet = '';\r\n            return;\r\n        }\r\n        if(option=='from') {\r\n            this.fromDatePickerSet = new Date(event.jsdate).toLocaleDateString();\r\n        }else if(option=='to') { \r\n            var obj = {};\r\n            obj['branchId'] = '';\r\n            obj['surveyId'] = '';\r\n            obj['from'] = this.fromDatePickerSet;\r\n            obj['tab'] = this.clickedTab;\r\n            obj['to'] = new Date(event.jsdate).toLocaleDateString();\r\n            this.dateFilter.push(obj);\r\n            //FETCH REPORT\r\n            this.getReport(this.dateFilter);\r\n            this.fromDatePickerSet='';\r\n            this.dateFilter=[];\r\n        }\r\n        //console.log('onDateChanged(): ', event.date, ' - jsdate: ', new Date(event.jsdate).toLocaleDateString(), ' - formatted: ', event.formatted, ' - epoc timestamp: ', event.epoc);\r\n      }\r\n\r\n      export(fileType){\r\n\r\n        this._notification.info('Info', `Generating ${fileType} report. This may take long depending on the size of data`);\r\n        this._fileService.generate(this.clickedTab, fileType)\r\n                    .subscribe(\r\n                        success => window.open(this._fileService.printReport(success.file, fileType)),\r\n                        error => this._notification.error('Error', `Error generating ${fileType} report`)\r\n                    );\r\n    }\r\n\r\n    updateReport(){\r\n        var obj = {};\r\n        obj['branchId'] = '';\r\n        obj['surveyId'] = '';\r\n        obj['from'] = '';//new Date().toLocaleDateString();\r\n        obj['tab'] = this.clickedTab;\r\n        obj['to'] = '';//new Date().toLocaleDateString();\r\n        this.dateFilter.push(obj);\r\n        this.getReport(this.dateFilter);\r\n        this.fromDatePickerSet='';\r\n        this.dateFilter=[];\r\n    }\r\n\r\n    changeReportType(type){\r\n        this._tabOptions[this.clickedTab] = type;\r\n    }\r\n       \r\n   }"],"sourceRoot":"/source/"}