{"version":3,"sources":["admin2/zones/zones.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAIE,qBACsB,IAAU,EACV,QAAwB;oBADxB,SAAI,GAAJ,IAAI,CAAM;oBACV,aAAQ,GAAR,QAAQ,CAAgB;oBAJtC,iBAAY,GAAG,eAAe,CAAC;gBAIU,CAAC;gBAGlD,8BAAQ,GAAR;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,YAAY,CAAE;yBACxB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;yBACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE7C,CAAC;gBAED,6BAAO,GAAP,UAAQ,IAAI;oBACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAE;yBACjD,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;yBACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C,CAAC;gBAED,mCAAa,GAAb,UAAc,QAAQ,EAAE,MAAM;oBAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAE,EAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAC,CAAE,CAAE;yBACtG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;yBACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C,CAAC;gBAED,sCAAgB,GAAhB,UAAiB,QAAQ,EAAE,MAAM;oBAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,YAAY,GAAG,iBAAc,QAAQ,iBAAY,MAAM,oBAAgB,CAAE;yBACnF,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;yBACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE7C,CAAC;gBAEO,iCAAW,GAAnB,UAAoB,GAAa;oBAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAG,CAAC;gBAC7B,CAAC;gBAEO,iCAAW,GAAnB,UAAqB,KAAU;oBAC3B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;wBAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;oBAC1E,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC;gBA5CH;oBAAC,iBAAU,EAAE;;+BAAA;gBA8Cb,kBAAC;YAAD,CA7CA,AA6CC,IAAA;YA7CD,qCA6CC,CAAA","file":"admin2/zones/zones.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { StorageService } from '../../shared/storage/storage.service'; \r\n\r\n@Injectable()\r\nexport class ZoneService {\r\n  \r\n  private _apiZonesUrl = '/api/v1/zones';\r\n\r\n  constructor(\r\n                private http: Http,\r\n                private _storage: StorageService) {}\r\n\r\n  \r\n  getZones(): Observable<any>{\r\n      return this.http.get( this._apiZonesUrl )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  addZone(zone): Observable<any>{\r\n      return this.http.post( this._apiZonesUrl, JSON.stringify( zone ) )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n  }\r\n\r\n  addZoneBranch(branchId, zoneId): Observable<any>{\r\n      return this.http.post( this._apiZonesUrl + `/zone_branches`, JSON.stringify( {branch_id: branchId, zone_id: zoneId} ) )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n  }\r\n\r\n  removeZoneBranch(branchId, zoneId): Observable<any>{\r\n      return this.http.get( this._apiZonesUrl + `/branch_id/${branchId}/zone_id/${zoneId}/zone_branches` )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      return res.json() || { };\r\n  }\r\n\r\n  private handleError (error: any) {\r\n      let errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n      return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}