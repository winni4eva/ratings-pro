{"version":3,"sources":["admin2/zones/add/add-zone.component.ts"],"names":[],"mappings":"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","file":"admin2/zones/add/add-zone.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { StorageService } from '../../../shared/storage/storage.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { CustomValidator } from '../../../shared/validator/custom-validator.service';\r\nimport { ZoneService } from '../zones.service';\r\nimport { AddZoneInterface } from './add-zone.model';\r\nimport { BranchService } from '../../branch/branch.service';\r\n\r\n@Component({\r\n    selector: 'my-add-zone',\r\n    template:\r\n   `\r\n   <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n   <my-content [title]=\"'Add Zone'\">\r\n        <div class=\"content\">\r\n            <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"add(form.value, form.valid)\" novalidate>\r\n\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-6\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <label>Zone/Region Name</label>\r\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Name\">\r\n                            <small [hidden]=\"form.controls.name.pristine || !form.controls.name.hasError('required')\" class=\"inputError\">Zone name is required.</small>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label>Add Branches</label>\r\n                            <select class=\"form-control\" (change)=\"addBranch()\" [(ngModel)]=\"_selectedBranch\" [ngModelOptions]=\"{standalone: true}\">\r\n                                <option [value]=\"''\">--Select Branch--</option>\r\n                                <option [ngValue]=\"branch\" *ngFor=\"let branch of _branches\">{{branch.name}}</option>\r\n                            </select>\r\n                            <!--<small [hidden]=\"form.controls.branch_id.pristine || !form.controls.branch_id.hasError('required')\" class=\"inputError\">Branch name is required.</small>-->\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <div *ngFor=\"let branch of form.controls.branches.controls; let i=index\">\r\n\r\n                            <div class=\"col-md-2\" style=\"margin-right:1px !important\">\r\n                                \r\n                                <div class=\"pull-right\">\r\n                                    <span (click)=\"removeBranch(i)\">\r\n                                        <i style=\"font-size:30px;cursor:pointer !important\" class=\"pe-7s-close\"></i>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <a class=\"btn btn-default btn-block\" style=\"border:2px solid black !important\">{{form.get(getControlValue(i,'name')).value}}</a>\r\n                            \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <button type=\"submit\" class=\"btn btn-info btn-fill pull-left\" [disabled]=\"!form.valid\">Add Zone</button>\r\n                <div class=\"clearfix\"></div>\r\n            </form>\r\n        </div>\r\n    </my-content>\r\n    `\r\n})\r\n\r\nexport class AddZoneComponent implements OnInit {\r\n\r\n    private form;\r\n\r\n    private _branches;\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    private _selectedBranch;\r\n\r\n    constructor(\r\n              private _storageService: StorageService,\r\n              private _router: Router,\r\n              private _notification: NotificationsService,\r\n              private _fb: FormBuilder,\r\n              private _zoneService: ZoneService,\r\n              private _branchService: BranchService){}\r\n\r\n    ngOnInit(){\r\n        this._branchService.getBranches().subscribe(\r\n            result => this._branches = result.branches,\r\n            error => this._notification.error('Error', error)\r\n        );\r\n        \r\n        this.form = this._fb.group({\r\n            name: ['', Validators.required],\r\n            branches: this._fb.array([])\r\n        });\r\n    }\r\n\r\n    add(model: AddZoneInterface, isValid: boolean){\r\n        //if(!isValid) return;\r\n        this._zoneService.addZone(model).subscribe(\r\n            result => this._notification.success('Success', result.success),\r\n            error => console.log(error)//this._notification.error('Error', error.error)\r\n        );\r\n    }\r\n\r\n    addBranch() {\r\n        const control = <FormArray>this.form.controls['branches'];\r\n\r\n        let push = true;\r\n\r\n        for(let branch of control.value)\r\n            if(branch.branch_id == this._selectedBranch.id)\r\n                push=false;\r\n\r\n        if(push)\r\n            control.push(this.setBranch(this._selectedBranch.name, this._selectedBranch.id));\r\n    }\r\n\r\n    removeBranch(i: number) {\r\n        const control = <FormArray>this.form.controls['branches'];\r\n        control.removeAt(i);\r\n    }\r\n\r\n    setBranch(branchName: string, branchId: number) {\r\n        return this._fb.group({\r\n            name: [branchName],\r\n            branch_id: [branchId]\r\n        });\r\n    }\r\n\r\n    getControlValue(index, controlName, subIndex = -1, subControlName = ''): string{\r\n        if(subIndex > -1 && subControlName){\r\n            return `branches.${index}.${controlName}.${subIndex}.${subControlName}`;\r\n        }else if(subIndex < 0 && subControlName){\r\n            return `branches.${index}.${controlName}.${subControlName}`;\r\n        }else{\r\n            return `branches.${index}.${controlName}`;\r\n        }\r\n    }\r\n\r\n }\r\n"],"sourceRoot":"/source/"}