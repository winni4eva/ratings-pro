{"version":3,"sources":["admin2/zones/view/view-zones.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAyCA;gBAaI,4BACoB,YAAyB,EACzB,aAAmC,EACnC,OAAe;oBAFf,iBAAY,GAAZ,YAAY,CAAa;oBACzB,kBAAa,GAAb,aAAa,CAAsB;oBACnC,YAAO,GAAP,OAAO,CAAQ;oBAd3B,WAAM,GAAe,EAAE,CAAC;oBAExB,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;oBAEO,iBAAY,GAAgB,EAAE,CAAC;gBAMF,CAAC;gBAEtC,qCAAQ,GAAR;oBACI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBAED,wCAAW,GAAX;oBACI,EAAE;gBACN,CAAC;gBAED,mCAAM,GAAN,UAAO,KAAK,EAAE,MAAM;oBAChB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBAAC,MAAM,CAAC;oBAErC,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;wBACpC,IAAI,SAAS,GAAG,OAAO,CAAC,iDAAiD,CAAC,CAAC;oBAI/E,CAAC;oBAAA,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAA,CAAC;wBAC3C,IAAI,SAAS,GAAG,OAAO,CAAC,mDAAmD,CAAC,CAAC;wBAC7E,EAAE,CAAC,CAAC,SAAS,CAAC;4BACV,IAAI,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;oBAC9B,CAAC;gBAEL,CAAC;gBAED,qCAAQ,GAAR;oBAAA,iBAKC;oBAJG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAClC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAA1B,CAA0B,EACpC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;gBACN,CAAC;gBAED,wCAAW,GAAX,UAAY,MAAM;oBACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAE,2BAAwB,MAAM,CAAE,CAAE,CAAC,CAAC;gBAChE,CAAC;gBAED,mCAAM,GAAN,UAAO,MAAM;oBAAb,iBASC;oBARG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;yBACvB,SAAS,CACN,UAAA,MAAM;wBACF,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;wBACtD,KAAI,CAAC,QAAQ,EAAE,CAAC;oBACpB,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBACd,CAAC;gBAlGL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EACT,68CA8BE;qBACJ,CAAC;;sCAAA;gBAiED,yBAAC;YAAD,CA/DD,AA+DE,IAAA;YA/DF,mDA+DE,CAAA","file":"admin2/zones/view/view-zones.component.js","sourcesContent":["import { Component, OnInit, OnDestroy  } from '@angular/core';\nimport { ZoneService } from '../zones.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'my-view-survey',\n    template:\n   `\n        <simple-notifications [options]=\"_options\"></simple-notifications>\n\n        <my-content title=\"Zones\">\n\n            <div class=\"content table-responsive table-full-width\">\n                <table class=\"table table-hover table-striped\">\n                    <thead>\n                        <th>Zone</th>\n                        <th>Number Of Branches</th>\n                        <th>Action</th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let zone of _zones; let i = index\">\n                            <td>{{zone?.name}}</td>\n                            <td>{{zone?.zone_branches?.length}}</td>\n                            <td><a class=\"btn btn-default\" style=\"pointer:cursor\" (click)=\"addBranches(zone?.id)\">branches</a></td>\n                            <td></td>\n                            <td>\n                                <select class=\"form-control\" [(ngModel)]=\"_actionValue[i]\" (change)=\"action(i, zone?.id)\">\n                                    <option value=\"\">--Select Action--</option>\n                                    <!--<option [value]=\"'edit'\">Edit</option>-->\n                                    <option [value]=\"'delete'\">Delete</option>\n                                </select>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </my-content>\n    `\n})\n\nexport class ViewZonesComponent implements OnInit, OnDestroy {\n\n    private _zones: Array<any> = [];\n\n    private _options = {\n        position: [\"top\", \"right\"],\n        timeOut: 9000,\n        lastOnBottom: true\n    }\n\n    private _actionValue: Array<String>=[];\n\n\n    constructor(\n                private _zoneService: ZoneService,\n                private _notification: NotificationsService,\n                private _router: Router){}\n\n    ngOnInit(){\n        this.getZones();\n    }\n\n    ngOnDestroy(){\n        //\n    }\n\n    action(index, zoneId) {\n        if(!this._actionValue[index]) return;\n\n        if(this._actionValue[index] == 'edit') {\n            let confirmed = confirm(\"Are you sure you want to edit the selected zone\");\n            //if (confirmed) \n                //this._router.navigate([`admin/add_user/${zoneId}`]);\n    \n        }else if(this._actionValue[index] == 'delete'){\n            let confirmed = confirm(\"Are you sure you want to remove the selected zone\");\n            if (confirmed) \n                this.remove( zoneId );\n        }\n    \n    }\n\n    getZones(){\n        this._zoneService.getZones().subscribe(\n            result => this._zones = result.zones,\n            error => console.log(error)\n        );\n    }\n\n    addBranches(zoneId){\n        this._router.navigate([ `/admin/zone-branches/${zoneId}` ]);\n    }\n\n    remove(zoneId){\n        this._zoneService.remove(zoneId)\n                .subscribe( \n                    result => {\n                        this._notification.success('Success', result.success);\n                        this.getZones();\n                    },\n                    error => this._notification.error('Error', error)\n                );\n    }\n }\n"],"sourceRoot":"/source/"}