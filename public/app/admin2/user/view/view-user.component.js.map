{"version":3,"sources":["admin2/user/view/view-user.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA+CA;gBAaI,2BACoB,YAAyB,EACzB,aAAmC,EACnC,OAAe;oBAFf,iBAAY,GAAZ,YAAY,CAAa;oBACzB,kBAAa,GAAb,aAAa,CAAsB;oBACnC,YAAO,GAAP,OAAO,CAAQ;oBAZ3B,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;oBAEO,iBAAY,GAAgB,EAAE,CAAC;gBAMF,CAAC;gBAEtC,oCAAQ,GAAR;oBAAA,iBAKC;oBAJG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAClC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,EAA7B,CAA6B,EACvC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;gBACN,CAAC;gBAED,uCAAW,GAAX;oBACI,EAAE;gBACN,CAAC;gBAED,kCAAM,GAAN,UAAO,KAAK,EAAE,MAAM;oBAChB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBAAC,MAAM,CAAC;oBAErC,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;wBACpC,IAAI,SAAS,GAAG,OAAO,CAAC,iDAAiD,CAAC,CAAC;wBAC3E,EAAE,CAAC,CAAC,SAAS,CAAC;4BACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAkB,MAAM,CAAE,CAAC,CAAC,CAAC;oBAE5D,CAAC;oBAAA,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAA,CAAC;wBAC3C,IAAI,SAAS,GAAG,OAAO,CAAC,mDAAmD,CAAC,CAAC;wBAC7E,EAAE,CAAC,CAAC,SAAS,CAAC;4BACV,IAAI,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;oBAC9B,CAAC;gBAEL,CAAC;gBAED,kCAAM,GAAN,UAAO,MAAM;oBACT,+CAA+C;oBAC/C,uBAAuB;oBACvB,qCAAqC;oBACrC,wGAAwG;oBACxG,mEAAmE;oBACnE,4BAA4B;oBAC5B,6EAA6E;oBAC7E,oDAAoD;oBACpD,yBAAyB;gBAC7B,CAAC;gBAjGL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EACT,urDAoCE;qBACJ,CAAC;;qCAAA;gBA0DD,wBAAC;YAAD,CAxDD,AAwDE,IAAA;YAxDF,iDAwDE,CAAA","file":"admin2/user/view/view-user.component.js","sourcesContent":["import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'my-view-survey',\r\n    template:\r\n   `\r\n        <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n        <my-content title=\"Users\">\r\n\r\n            <div class=\"content table-responsive table-full-width\">\r\n                <table class=\"table table-hover table-striped\">\r\n                    <thead>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Company</th>\r\n                        <!--<th>Number Of branches Attached</th>-->\r\n                        <th>Role</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let user of _users; let i = index\">\r\n                            <td>{{user?.first_name}}</td>\r\n                            <td>{{user?.last_name}}</td>\r\n                            <td>{{user?.email}}</td>\r\n                            <td>{{user?.company}}</td>\r\n                            <!--<td>{{user?.branch_user?.length}}</td>-->\r\n                            <td>{{user?.role}}</td>\r\n                            <td>\r\n                                <select class=\"form-control\" [(ngModel)]=\"_actionValue[i]\" (change)=\"action(i, user?.id)\">\r\n                                    <option value=\"\">--Select Action--</option>\r\n                                    <option [value]=\"'edit'\">Edit</option>\r\n                                    <option [value]=\"'delete'\">Delete</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </my-content>\r\n    `\r\n})\r\n\r\nexport class ViewUserComponent implements OnInit, OnDestroy {\r\n\r\n    private _users;\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    private _actionValue: Array<String>=[];\r\n\r\n\r\n    constructor(\r\n                private _userService: UserService,\r\n                private _notification: NotificationsService,\r\n                private _router: Router){}\r\n\r\n    ngOnInit(){\r\n        this._userService.getUsers().subscribe(\r\n            result => this._users = result.resource,\r\n            error => console.log(error)\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        //\r\n    }\r\n\r\n    action(index, userId) {\r\n        if(!this._actionValue[index]) return;\r\n\r\n        if(this._actionValue[index] == 'edit') {\r\n            let confirmed = confirm(\"Are you sure you want to edit the selected user\");\r\n            if (confirmed) \r\n                this._router.navigate([`admin/add_user/${userId}`]);\r\n    \r\n        }else if(this._actionValue[index] == 'delete'){\r\n            let confirmed = confirm(\"Are you sure you want to remove the selected user\");\r\n            if (confirmed) \r\n                this.remove( userId );\r\n        }\r\n    \r\n    }\r\n\r\n    remove(userId){\r\n        // this._miscService.removeResponse(responseId)\r\n        //         .subscribe( \r\n        //                         result => \r\n        //                             this._notification.success('Success', 'Response removed successfully...')\r\n        //                             //this._responses = result.responses\r\n        //                         ,\r\n        //                         error => this._notification.error('Error', error),\r\n        //                         () => this.getResponses()\r\n        //                     );\r\n    }\r\n }\r\n"],"sourceRoot":"/source/"}