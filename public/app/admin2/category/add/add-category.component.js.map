{"version":3,"sources":["admin2/category/add/add-category.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgEA;gBAkBI,8BACoB,gBAAiC,EACjC,cAA6B,EAC7B,aAAmC,EACnC,YAAyB;oBAHzB,qBAAgB,GAAhB,gBAAgB,CAAiB;oBACjC,mBAAc,GAAd,cAAc,CAAe;oBAC7B,kBAAa,GAAb,aAAa,CAAsB;oBACnC,iBAAY,GAAZ,YAAY,CAAa;oBAdrC,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;gBAU8C,CAAC;gBAE/C,uCAAQ,GAAR;oBAAA,iBAkBA;oBAjBG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACvC,UAAA,MAAM;wBACF,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;oBACrC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;oBAEF,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACnC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAA5B,CAA4B,EACtC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;oBAEF,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAS,CAAC;wBACtB,IAAI,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;wBAChD,SAAS,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;wBACrD,QAAQ,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;qBACvD,CAAC,CAAC;gBACP,CAAC;gBAED,kCAAG,GAAH,UAAI,KAAwB,EAAE,OAAO;oBAArC,iBAUC;oBATG,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC;wBAAC,MAAM,CAAC;oBAEpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9C,UAAA,MAAM;wBACF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACpB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC1D,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBACN,CAAC;gBAED,uCAAQ,GAAR,UAAS,MAAM;oBACX,GAAG,CAAC,CAAc,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;wBAA1B,IAAI,KAAK,SAAA;wBACV,qBAAqB;wBACrB,EAAE,CAAA,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC;qBACvF;gBACL,CAAC;gBArHL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EACT,u/EAkDE;qBACJ,CAAC;;wCAAA;gBAiED,2BAAC;YAAD,CA/DD,AA+DE,IAAA;YA/DF,uDA+DE,CAAA","file":"admin2/category/add/add-category.component.js","sourcesContent":["import { Component, OnInit  } from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { CategoryInterface } from './add-category.interface';\r\nimport { CategoryService } from '../category.service';\r\nimport { BranchService } from '../../branch/branch.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { MiscService } from '../../misc/misc.service';\r\n\r\n@Component({\r\n    selector: 'my-add-category',\r\n    template:\r\n   `\r\n   <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n   <my-content [title]=\"'Add Category'\">\r\n        <div class=\"content\">\r\n            <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"add(form.value, form.valid)\" novalidate>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>Branch</label>\r\n                            <select formControlName=\"branch_id\" class=\"form-control\">\r\n                                <option *ngFor=\"let branch of _branches\" value=\"{{branch.id}}\">{{branch.name}}</option>\r\n                            </select>\r\n                            <small [hidden]=\"form.controls.branch_id.pristine || !form.controls.branch_id.hasError('required')\" class=\"inputError\">Category name is required.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>Category Name</label>\r\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Category name\" value=\"\">\r\n                            <small [hidden]=\"form.controls.name.pristine || !form.controls.name.hasError('required')\" class=\"inputError\">Category name is required.</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Image</label>\r\n                        <select formControlName=\"image_id\" class=\"form-control\" (click)=\"onChange($event)\">\r\n                            <option *ngFor=\"let image of _images; let i = index\" value=\"{{image.id}}\">\r\n                                Image {{i+1}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-3\" *ngIf=\"_displayImage\">\r\n                <img [src]=\"_displayImage\" class=\"img-thumbnail\" style=\"width:250px;height:250px\"/>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <button type=\"submit\" class=\"btn btn-info btn-fill pull-left\" [disabled]=\"!form.valid\">Add Category</button>\r\n              </div>\r\n\r\n            <div class=\"clearfix\"></div>\r\n            </form>\r\n        </div>\r\n    </my-content>\r\n    `\r\n})\r\n\r\nexport class AddCategoryComponent implements OnInit {\r\n\r\n    private form;\r\n\r\n    private _branches;\r\n\r\n    private _branchList;\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    private _images;\r\n\r\n    private _displayImage;\r\n\r\n    constructor(\r\n                private _categoryService: CategoryService, \r\n                private _branchService: BranchService,\r\n                private _notification: NotificationsService,\r\n                private _miscService: MiscService){}\r\n\r\n     ngOnInit(){\r\n        this._branchService.getBranches().subscribe(\r\n            result => {\r\n                this._branches = result.branches;\r\n            },\r\n            error => console.log(error)\r\n        );\r\n\r\n        this._miscService.getImages().subscribe(\r\n            result => this._images = result.images,\r\n            error => console.log(error)\r\n        );\r\n        \r\n        this.form = new FormGroup({\r\n            name: new FormControl('', [Validators.required]),\r\n            branch_id: new FormControl('', [Validators.required]),\r\n            image_id: new FormControl('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    add(model: CategoryInterface, isValid){\r\n        if(!isValid) return;\r\n        \r\n        this._categoryService.addCategory(model).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                this._notification.success('Success', result.message);\r\n            },\r\n            error => this._notification.error('Error', error)\r\n        );\r\n    }\r\n\r\n    onChange($event){\r\n        for (let image of this._images) {\r\n            //console.log(image);\r\n            if(image.id == this.form.controls['image_id'].value) this._displayImage = image.src;\r\n        }\r\n    }\r\n\r\n }\r\n"],"sourceRoot":"/source/"}