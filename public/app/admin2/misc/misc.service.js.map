{"version":3,"sources":["admin2/misc/misc.service.ts"],"names":[],"mappings":"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","file":"admin2/misc/misc.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { StorageService } from '../../shared/storage/storage.service'; \r\n\r\n@Injectable()\r\nexport class MiscService {\r\n  \r\n  private _apiImageUrl = '/api/v1/images';\r\n\r\n  private _apiResponseUrl = '/api/v1/responses';\r\n\r\n  constructor(\r\n                private http: Http,\r\n                private _storage: StorageService) {}\r\n\r\n  \r\n  getImages(): Observable<any>{\r\n      return this.http.get( this._apiImageUrl )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  addImage(files): Observable<any>{\r\n      \r\n    return Observable.create(observer => {\r\n                \r\n                let formData: FormData = new FormData(),\r\n                xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\r\n                if(files){\r\n                    for (let i = 0; i < files.length; i++) {\r\n                        console.log(files[i]);\r\n                        formData.append(\"image\", files[i], files[i].name);\r\n                    }\r\n                }\r\n\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState === 4) {\r\n                        if (xhr.status === 200) {\r\n                            observer.next(JSON.parse(xhr.response));\r\n                            observer.complete();\r\n                        } else {\r\n                            observer.error(xhr.response);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                //xhr.upload.onprogress = (event) => {\r\n                    //this.progress = Math.round(event.loaded / event.total * 100);\r\n\r\n                    //this.progressObserver.next(this.progress);\r\n                //};\r\n\r\n                xhr.open('POST', this._apiImageUrl , true);\r\n                let authToken = 'Bearer '  +  localStorage.getItem('rToken');\r\n                xhr.setRequestHeader('Authorization', authToken );\r\n                xhr.setRequestHeader('Accept', 'application/json' );\r\n                xhr.send(formData);\r\n\r\n            });\r\n      \r\n  }\r\n\r\n  getResponses(responseId = 0): Observable<any>{\r\n      return this.http.get( this._apiResponseUrl+`?responseId=${responseId}` )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  removeResponse(responseId): Observable<any>{\r\n      console.log(`Delete Response ${responseId}`);\r\n      return this.http.delete( this._apiResponseUrl +'/'+ responseId )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  addResponse(resp, responseId = 0): Observable<any>{\r\n      \r\n      return this.http.post( this._apiResponseUrl + `?responseId=${responseId}`, JSON.stringify( resp ) )\r\n                      .map(this.extractData)\r\n                      .catch(this.handleError);\r\n      \r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      return res.json() || { };\r\n  }\r\n\r\n  private handleError (error: any) {\r\n      \r\n      let errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\r\n      return Observable.throw(errMsg);\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}