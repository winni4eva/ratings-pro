{"version":3,"sources":["admin2/misc/response/view/view-response.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAGA,uFAAuF;YA+BvF;gBAkBI,+BACoB,YAAyB,EACzB,aAAmC;oBADnC,iBAAY,GAAZ,YAAY,CAAa;oBACzB,kBAAa,GAAb,aAAa,CAAsB;oBAhB/C,iBAAY,GAAS,EAAE,CAAC;oBAExB,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;oBAEM,iBAAY,GAAW,CAAC,CAAC;oBAEzB,eAAU,GAAW,CAAC,CAAC;oBAEvB,gBAAW,GAAW,CAAC,CAAC;gBAI0B,CAAC;gBAE1D,wCAAQ,GAAR;oBACI,IAAI,CAAC,YAAY,EAAE,CAAC;gBACxB,CAAC;gBAED,4CAAY,GAAZ;oBAAA,iBAUC;oBARG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACzE,UAAA,MAAM;wBACF,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;wBACnC,2CAA2C;oBAC/C,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBAEN,CAAC;gBAED,sCAAM,GAAN,UAAO,UAAU;oBACb,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;wBAAC,MAAM,CAAC;oBAE1C,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAE,QAAQ,CAAC;wBAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBACxE,iDAAiD;gBACrD,CAAC;gBAED,0CAAU,GAAV,UAAW,UAAU;oBAArB,iBAOC;oBANG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,CAAC;yBACnC,SAAS,CACM,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,EAAlC,CAAkC,EAC5C,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,EACjD,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAC5B,CAAC;gBAC1B,CAAC;gBAED,2CAAW,GAAX;oBACI,EAAE;gBACN,CAAC;gBAtFL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EACT,g9BAuBE;qBACJ,CAAC;;yCAAA;gBA4DD,4BAAC;YAAD,CA1DD,AA0DE,IAAA;YA1DF,yDA0DE,CAAA","file":"admin2/misc/response/view/view-response.component.js","sourcesContent":["import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { MiscService } from '../../misc.service';\r\nimport {NotificationsService} from 'angular2-notifications';\r\n//import{ Pagination, PaginatedResult } from '../../../../shared/interfaces/interfaces'\r\n\r\n@Component({\r\n    selector: 'my-view-response',\r\n    template:\r\n   `\r\n        <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n        <my-content title=\"Responses\">\r\n            <div class=\"content table-responsive table-full-width\">\r\n                <table class=\"table table-hover table-striped\">\r\n                    <thead>\r\n                        <th>Name</th>\r\n                        <th>Score</th>\r\n                        <th>Image</th>\r\n                        <!--<th>Action</th>-->\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let response of _responses; let i = index\">\r\n                            <td>{{response?.name}}</td>\r\n                            <td>{{response?.rater?.score}}</td>\r\n                            <td><img [src]=\"response?.rater?.image?.src\" style=\"width:50px;height:50px\"/></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </my-content>\r\n    `\r\n})\r\n\r\nexport class ViewResponseComponent implements OnInit, OnDestroy {\r\n\r\n    private _responses;\r\n\r\n    private _actionValue:any[] = [];\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    public itemsPerPage: number = 2;\r\n\r\n    public totalItems: number = 0;\r\n\r\n    public currentPage: number = 1;\r\n\r\n    constructor(\r\n                private _miscService: MiscService,\r\n                private _notification: NotificationsService){}\r\n\r\n    ngOnInit(){\r\n        this.getResponses();\r\n    }\r\n\r\n    getResponses(){\r\n\r\n        this._miscService.getResponses(this.currentPage, this.itemsPerPage).subscribe(\r\n            result => {\r\n                this._responses = result.responses;\r\n                //this.totalItems = result.responses.total;\r\n            },\r\n            error => this._notification.error('Error', error)\r\n        );\r\n\r\n    }\r\n\r\n    action(responseId) {\r\n        console.log(responseId);\r\n        if(!this._actionValue[responseId]) return;\r\n\r\n        if(this._actionValue[responseId]=='delete') this.removeBook(responseId);\r\n        //if(this._actionValue[responseId]=='edit') this.\r\n    }\r\n\r\n    removeBook(responseId){\r\n        this._miscService.removeResponse(responseId)\r\n                .subscribe( \r\n                                result => this._responses = result.responses,\r\n                                error => this._notification.error('Error', error),\r\n                                () => this.getResponses()\r\n                            );\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        //\r\n    }\r\n }\r\n"],"sourceRoot":"/source/"}