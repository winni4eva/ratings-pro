{"version":3,"sources":["admin2/misc/response/add/add-response.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA2EA;gBAcI,8BACoB,YAAyB,EACzB,GAAgB,EAChB,aAAmC;oBAFnC,iBAAY,GAAZ,YAAY,CAAa;oBACzB,QAAG,GAAH,GAAG,CAAa;oBAChB,kBAAa,GAAb,aAAa,CAAsB;oBAX/C,kBAAa,GAAW,EAAE,CAAC;oBAE3B,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;gBAKwD,CAAC;gBAEzD,uCAAQ,GAAR;oBAAA,iBA+BA;oBA7BG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;wBACvB,IAAI,EAAE,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;wBAC9B,KAAK,EAAE,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;wBAC/B,0BAA0B;wBACtB,KAAK,EAAE;4BACC,EAAE;4BACF,kBAAU,CAAC,OAAO,CAAC;gCACf,mDAAoB,CAAC,WAAW,CAC5B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,EAA/B,CAA+B,EACxC,kBAAU,CAAC,QAAQ,CACtB;6BACJ,CAAC;yBACD;wBACT,QAAQ,EAAE;4BACE,EAAE;4BACF,kBAAU,CAAC,OAAO,CAAC;gCACf,mDAAoB,CAAC,WAAW,CAC5B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,EAA/B,CAA+B,EACxC,kBAAU,CAAC,QAAQ,CACtB;6BACJ,CAAC;yBACD;qBAEpB,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACnC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAA5B,CAA4B,EACtC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;gBACN,CAAC;gBAED,kCAAG,GAAH,UAAI,KAAwB,EAAE,OAAO;oBAArC,iBAOC;oBANG,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC;wBAAC,MAAM,CAAC;oBAEpB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,EAArD,CAAqD,EAC/D,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBACN,CAAC;gBAED,uCAAQ,GAAR,UAAS,MAAM;oBACX,GAAG,CAAC,CAAc,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;wBAA1B,IAAI,KAAK,SAAA;wBACV,EAAE,CAAA,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC;qBACvF;gBACL,CAAC;gBArIL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EACT,+uGA8DE;qBACJ,CAAC;;wCAAA;gBAsED,2BAAC;YAAD,CApED,AAoEE,IAAA;YApEF,uDAoEE,CAAA","file":"admin2/misc/response/add/add-response.component.js","sourcesContent":["import { Component, OnInit  } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { ResponseInterface } from './add-response.interface';\r\nimport { MiscService } from '../../misc.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { ConditionalValidator } from '../../../../shared/validator/conditional-required.service';\r\n\r\n@Component({\r\n    selector: 'my-add-response',\r\n    template:\r\n   `\r\n   <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n   <my-content [title]=\"'Add Response'\">\r\n        <div class=\"content\">\r\n            <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"add(form.value, form.valid)\" novalidate>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Response</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                        <small [hidden]=\"form.controls.name.pristine || !form.controls.name.hasError('required')\" class=\"inputError\">Response name is required.</small>\r\n                    </div>\r\n               </div>\r\n\r\n               <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Rater</label>\r\n                        <select class=\"form-control\" formControlName=\"rater\">\r\n                            <option [value]=\"\">--Select Rater--</option>\r\n                            <option [value]=\"0\">No</option>\r\n                            <option [value]=\"1\">Yes</option>\r\n                        </select>\r\n                        <small [hidden]=\"form.controls.rater.pristine || !form.controls.rater.hasError('required')\" class=\"inputError\">Rater name is required.</small>\r\n                    </div>\r\n               </div>\r\n               <!--<p>{{form.get('rater') | json}}</p>-->\r\n               <!--<div class=\"row\" formGroupName=\"raters\">-->\r\n\r\n                    <div class=\"col-md-6\" [hidden]=\"form.controls.rater.value==0\">\r\n                        <div class=\"form-group\">\r\n                            <label>Score</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"score\">\r\n                            <small [hidden]=\"form.controls.score.pristine || !form.controls.score.hasError('required')\" class=\"inputError\">Score is required.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\" [hidden]=\"form.controls.rater.value==0\">\r\n                            <div class=\"form-group\">\r\n                                <label>Image</label>\r\n                                <select formControlName=\"image_id\" class=\"form-control\" (click)=\"onChange($event)\">\r\n                                    <option *ngFor=\"let image of _images; let i = index\" value=\"{{image.id}}\">\r\n                                        Image {{i+1}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                    </div>\r\n              <!--</div>-->\r\n\r\n              <div class=\"col-md-3\" *ngIf=\"_displayImage\" [hidden]=\"form.controls.rater.value==0\">\r\n                <img [src]=\"_displayImage\" class=\"img-thumbnail\" style=\"width:250px;height:250px\"/>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <button type=\"submit\" class=\"btn btn-info btn-fill pull-left\" [disabled]=\"!form.valid\">Add Response</button>\r\n              </div>\r\n             \r\n              <div class=\"clearfix\"></div>\r\n              \r\n            </form>\r\n        </div>\r\n    </my-content>\r\n    `\r\n})\r\n\r\nexport class AddResponseComponent implements OnInit {\r\n\r\n    private form;\r\n\r\n    private _images;\r\n\r\n    private _displayImage: string = '';\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    constructor(\r\n                private _miscService: MiscService, \r\n                private _fb: FormBuilder,\r\n                private _notification: NotificationsService){}\r\n\r\n     ngOnInit(){\r\n\r\n        this.form = this._fb.group({\r\n            name: ['',Validators.required],\r\n            rater: ['',Validators.required],\r\n            //raters: this._fb.group({\r\n                score: [\r\n                        '',\r\n                        Validators.compose([\r\n                            ConditionalValidator.conditional(\r\n                                group => group.controls.rater.value == 1,\r\n                                Validators.required\r\n                            )\r\n                        ])\r\n                        ],\r\n                image_id: [\r\n                            '', \r\n                            Validators.compose([\r\n                                ConditionalValidator.conditional(\r\n                                    group => group.controls.rater.value == 1,\r\n                                    Validators.required\r\n                                )\r\n                            ])\r\n                            ]\r\n             //})\r\n        });\r\n\r\n        this._miscService.getImages().subscribe(\r\n            result => this._images = result.images,\r\n            error => console.log(error)\r\n        );\r\n    }\r\n\r\n    add(model: ResponseInterface, isValid){\r\n        if(!isValid) return;\r\n        \r\n        this._miscService.addResponse(model).subscribe(\r\n            result => this._notification.success('Success', result.success),\r\n            error => this._notification.error('Error', error)\r\n        );\r\n    }\r\n\r\n    onChange($event){\r\n        for (let image of this._images) {\r\n            if(image.id == this.form.controls['image_id'].value) this._displayImage = image.src;\r\n        }\r\n    }\r\n\r\n\r\n }\r\n"],"sourceRoot":"/source/"}