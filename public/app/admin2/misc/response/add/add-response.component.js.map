{"version":3,"sources":["admin2/misc/response/add/add-response.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOA,8BAA8B;YAsE9B;gBAkBI,8BACoB,YAAyB,EACzB,GAAgB,EAChB,aAAmC,EACnC,eAA+B;oBAH/B,iBAAY,GAAZ,YAAY,CAAa;oBACzB,QAAG,GAAH,GAAG,CAAa;oBAChB,kBAAa,GAAb,aAAa,CAAsB;oBACnC,oBAAe,GAAf,eAAe,CAAgB;oBAhB3C,kBAAa,GAAW,EAAE,CAAC;oBAE3B,aAAQ,GAAG;wBACf,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;wBAC1B,OAAO,EAAE,IAAI;wBACb,YAAY,EAAE,IAAI;qBACrB,CAAA;gBAUoD,CAAC;gBAErD,uCAAQ,GAAR;oBAAA,iBAqCA;oBAnCG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAE,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,EAAvC,CAAuC,CAAE,CAAC;oBAG3F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;wBACvB,IAAI,EAAE,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;wBAC9B,KAAK,EAAE,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;wBAC/B,0BAA0B;wBACtB,KAAK,EAAE;4BACC,EAAE;4BACF,kBAAU,CAAC,OAAO,CAAC;gCACf,mDAAoB,CAAC,WAAW,CAC5B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,EAA/B,CAA+B,EACxC,kBAAU,CAAC,QAAQ,CACtB;6BACJ,CAAC;yBACD;wBACT,QAAQ,EAAE;4BACE,EAAE;4BACF,kBAAU,CAAC,OAAO,CAAC;gCACf,mDAAoB,CAAC,WAAW,CAC5B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,EAA/B,CAA+B,EACxC,kBAAU,CAAC,QAAQ,CACtB;6BACJ,CAAC;yBACL;qBAEhB,CAAC,CAAC;oBAEH,EAAE,CAAA,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wBAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAG7D,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACnC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAA5B,CAA4B,EACtC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC9B,CAAC;gBACN,CAAC;gBAED,kCAAG,GAAH,UAAI,KAAwB,EAAE,OAAO;oBAArC,iBAOC;oBANG,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC;wBAAC,MAAM,CAAC;oBAEpB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC5D,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,EAArD,CAAqD,EAC/D,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBACN,CAAC;gBAED,2CAAY,GAAZ,UAAa,UAAc;oBAA3B,iBAmBC;oBAnBY,0BAAc,GAAd,cAAc;oBAEvB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,SAAS,CAChD,UAAA,MAAM;wBACF,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;wBACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;wBAC7B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,IAAI,EAAE;4BACtB,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;4BAC7B,KAAK,EAAE,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAE,CAAC,GAAG,CAAC;4BACxC,KAAK,EAAE,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS;4BAC7E,QAAQ,EAAE,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS;yBACtF,CACJ,CAAC;wBACF,KAAI,CAAC,aAAa,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;wBAChG,2CAA2C;oBAC/C,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAxC,CAAwC,CACpD,CAAC;gBAEN,CAAC;gBAED,uCAAQ,GAAR,UAAS,MAAM;oBACX,GAAG,CAAC,CAAc,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;wBAA1B,IAAI,KAAK,SAAA;wBACV,EAAE,CAAA,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC;qBACvF;gBACL,CAAC;gBAED,4CAAa,GAAb,UAAc,IAAe,EAAE,IAAS;oBAEpC,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3B,mBAAmB;wBACnB,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,mBAAW,CAAC,CAAC,CAAC;4BAC3C,EAAE,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;gCACd,IAAI,OAAO,GAAgB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gCAC9C,IAAI,CAAC,eAAe,CAAC,OAAO,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;4BACxC,CAAC;wBACL,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,iBAAS,CAAC,CAAC,CAAC;4BAChD,EAAE,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;gCACd,IAAI,CAAC,aAAa,CAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC5D,CAAC;wBACJ,CAAC;oBAMF,CAAC;gBACP,CAAC;gBAEH,uDAAuD;gBACvD,yBAAyB;gBACzB,yCAAyC;gBACzC,6BAA6B;gBAC7B,iCAAiC;gBACjC,8CAA8C;gBAC9C,6CAA6C;gBAC7C,6EAA6E;gBAC7E,oDAAoD;gBACpD,iFAAiF;gBACjF,kDAAkD;gBAClD,6EAA6E;gBAC7E,YAAY;gBACZ,QAAQ;gBACR,IAAI;gBAEJ,8CAAe,GAAf,UAAgB,OAAoB,EAAE,KAAS;oBAC3C,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;gBA/ML;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EACT,k7GA8DE;qBACJ,CAAC;;wCAAA;gBAgJD,2BAAC;YAAD,CA9ID,AA8IE,IAAA;YA9IF,uDA8IE,CAAA","file":"admin2/misc/response/add/add-response.component.js","sourcesContent":["import { Component, OnInit  } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { ResponseInterface } from './add-response.interface';\r\nimport { MiscService } from '../../misc.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\nimport { ConditionalValidator } from '../../../../shared/validator/conditional-required.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n//import * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'my-add-response',\r\n    template:\r\n   `\r\n   <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n   <my-content [title]=\"(_responseId>0)? 'Edit Response' : 'Add Response'\">\r\n        <div class=\"content\">\r\n            <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"add(form.value, form.valid)\" novalidate>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Response</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                        <small [hidden]=\"form.controls.name.pristine || !form.controls.name.hasError('required')\" class=\"inputError\">Response name is required.</small>\r\n                    </div>\r\n               </div>\r\n\r\n               <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Rater</label>\r\n                        <select class=\"form-control\" formControlName=\"rater\">\r\n                            <option value=\"\" [selected]=\"!form.get('rater').value\">--Select Rater--</option>\r\n                            <option [value]=\"0\" [selected]=\"form.get('rater').value==0\">No</option>\r\n                            <option [value]=\"1\" [selected]=\"form.get('rater').value==1\">Yes</option>\r\n                        </select>\r\n                        <small [hidden]=\"form.controls.rater.pristine || !form.controls.rater.hasError('required')\" class=\"inputError\">Rater name is required.</small>\r\n                    </div>\r\n               </div>\r\n               <!--<p>{{form.get('rater') | json}}</p>-->\r\n               <!--<div class=\"row\" formGroupName=\"raters\">-->\r\n\r\n                    <div class=\"col-md-6\" *ngIf=\"form.controls.rater.value==1\">\r\n                        <div class=\"form-group\">\r\n                            <label>Score</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"score\">\r\n                            <small [hidden]=\"form.controls.score.pristine || !form.controls.score.hasError('required')\" class=\"inputError\">Score is required.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\" *ngIf=\"form.controls.rater.value==1\">\r\n                            <div class=\"form-group\">\r\n                                <label>Image</label>\r\n                                <select formControlName=\"image_id\" class=\"form-control\" (click)=\"onChange($event)\">\r\n                                    <option *ngFor=\"let image of _images; let i = index\" [value]=\"image.id\" [selected]=\"form.controls.image_id.value==image.id\">\r\n                                        Image {{i+1}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                    </div>\r\n              <!--</div>-->\r\n\r\n              <div class=\"col-md-3\" *ngIf=\"_displayImage\">\r\n                <img [src]=\"_displayImage\" class=\"img-thumbnail\" style=\"width:250px;height:250px\"/>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <button type=\"submit\" class=\"btn btn-info btn-fill pull-left\" [disabled]=\"!form.valid\">{{(_responseId > 0)? 'Edit' : 'Add'}} Response</button>\r\n              </div>\r\n             \r\n              <div class=\"clearfix\"></div>\r\n              \r\n            </form>\r\n        </div>\r\n    </my-content>\r\n    `\r\n})\r\n\r\nexport class AddResponseComponent implements OnInit {\r\n\r\n    private form;\r\n\r\n    private _images;\r\n\r\n    private _displayImage: string = '';\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    private _responseId;\r\n\r\n    private _responses;\r\n\r\n    constructor(\r\n                private _miscService: MiscService, \r\n                private _fb: FormBuilder,\r\n                private _notification: NotificationsService,\r\n                private _activatedRoute: ActivatedRoute){}\r\n\r\n     ngOnInit(){\r\n\r\n        this._activatedRoute.params.subscribe( params => this._responseId = params['responseId'] );         \r\n\r\n\r\n        this.form = this._fb.group({\r\n            name: ['',Validators.required],\r\n            rater: ['',Validators.required],\r\n            //raters: this._fb.group({\r\n                score: [\r\n                        '',\r\n                        Validators.compose([\r\n                            ConditionalValidator.conditional(\r\n                                group => group.controls.rater.value == 1,\r\n                                Validators.required\r\n                            )\r\n                        ])\r\n                        ],\r\n                image_id: [\r\n                            '', \r\n                            Validators.compose([\r\n                                ConditionalValidator.conditional(\r\n                                    group => group.controls.rater.value == 1,\r\n                                    Validators.required\r\n                                )\r\n                            ])\r\n                        ]\r\n            //})\r\n        });\r\n\r\n        if(this._responseId > 0) this.getResponses(this._responseId);\r\n\r\n\r\n        this._miscService.getImages().subscribe(\r\n            result => this._images = result.images,\r\n            error => console.log(error)\r\n        );\r\n    }\r\n\r\n    add(model: ResponseInterface, isValid){\r\n        if(!isValid) return;\r\n        \r\n        this._miscService.addResponse(model, this._responseId).subscribe(\r\n            result => this._notification.success('Success', result.success),\r\n            error => this._notification.error('Error', error)\r\n        );\r\n    }\r\n\r\n    getResponses(responseId = 0){\r\n\r\n        this._miscService.getResponses(responseId).subscribe(\r\n            result => {\r\n                this._responses = result.responses;\r\n                console.log(this._responses);\r\n                this.initFormGroup(this.form, { \r\n                        name: this._responses[0].name, \r\n                        rater: (this._responses[0].rater)? 1 : 0 ,\r\n                        score: (this._responses[0].rater)? this._responses[0].rater.score : undefined, \r\n                        image_id: (this._responses[0].rater)? this._responses[0].rater.image_id : undefined\r\n                    } \r\n                );\r\n                this._displayImage = (this._responses[0].rater)? this._responses[0].rater.image.src : undefined;\r\n                //this.totalItems = result.responses.total;\r\n            },\r\n            error => this._notification.error('Error', error)\r\n        );\r\n\r\n    }\r\n\r\n    onChange($event){\r\n        for (let image of this._images) {\r\n            if(image.id == this.form.controls['image_id'].value) this._displayImage = image.src;\r\n        }\r\n    }\r\n\r\n    initFormGroup(form: FormGroup, data: any) {\r\n\r\n        for(var key in form.controls) {\r\n            //console.log(key);\r\n            if(form.controls[key] instanceof FormControl) {\r\n                if(data[key]){\r\n                let control = <FormControl>form.controls[key];\r\n                this.initFormControl(control,data[key]);\r\n                }\r\n            } else if(form.controls[key] instanceof FormGroup) {\r\n                if(data[key]){\r\n                this.initFormGroup(<FormGroup>form.controls[key],data[key]);\r\n                }\r\n             } \r\n             //else if(form.controls[key] instanceof FormArray) {\r\n            //     var control = <FormArray>form.controls[key];\r\n            //     if(data[key])\r\n            //     this.initFormArray(control, data[key]);\r\n            // }\r\n            }\r\n      }\r\n\r\n    //   initFormArray(array: FormArray, data: Array<any>){\r\n    //     if(data.length>0){\r\n    //         var clone = array.controls[0];\r\n    //         array.removeAt(0);\r\n    //         for(var idx in data) {\r\n    //             array.push(_.cloneDeep(clone));\r\n    //             if(clone instanceof FormGroup)\r\n    //             this.initFormGroup(<FormGroup>array.controls[idx], data[idx]);\r\n    //             else if(clone instanceof FormControl)\r\n    //             this.initFormControl(<FormControl>array.controls[idx], data[idx]);\r\n    //             else if(clone instanceof FormArray)\r\n    //             this.initFormArray(<FormArray>array.controls[idx], data[idx]);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    initFormControl(control: FormControl, value:any){\r\n        control.setValue(value);\r\n    }\r\n\r\n\r\n }\r\n"],"sourceRoot":"/source/"}