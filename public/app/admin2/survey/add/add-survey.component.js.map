{"version":3,"sources":["admin2/survey/add/add-survey.component.ts"],"names":[],"mappings":"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","file":"admin2/survey/add/add-survey.component.js","sourcesContent":["import { Component, OnInit  } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, AbstractControl } from '@angular/forms';\r\nimport { SurveyInterface } from './add-survey.interface';\r\nimport { SurveyService } from '../survey.service';\r\nimport { BranchService } from '../../branch/branch.service';\r\nimport { CategoryService } from '../../category/category.service';\r\nimport { MiscService } from '../../misc/misc.service';\r\nimport {NotificationsService} from 'angular2-notifications';\r\nimport {ConditionalValidator} from '../../../shared/validator/conditional-required.service';\r\n\r\n// function answerValidator(ctrl) {\r\n//     return function(control) {\r\n//       //console.log('validator');\r\n//       //console.log(control);\r\n//       //console.log('checkbox = '+ ctrl.value);\r\n//       //console.log('control.value = ' + control.value);\r\n//       let selectbox = ctrl.value;\r\n//       if(selectbox == '*') return null;\r\n//       //return {required: true};\r\n//       return null;\r\n//     }\r\n// }\r\n\r\n@Component({\r\n    selector: 'my-add-survey',\r\n    template:\r\n   `\r\n   <simple-notifications [options]=\"_options\"></simple-notifications>\r\n\r\n   <my-content [title]=\"'Add Survey'\">\r\n        <div class=\"content\">\r\n            <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"add(form.value, form.valid)\" novalidate>\r\n\r\n                <div class=\"row\" formGroupName=\"survey\">\r\n\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Survey Name</label>\r\n                            <input type=\"text\" formControlName=\"title\" class=\"form-control\" placeholder=\"Survey name\" value=\"\">\r\n                            <small [hidden]=\"form.controls.survey.controls.title.pristine || !form.controls.survey.controls.title.hasError('required')\" class=\"inputError\">Survey name is required.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Category</label>\r\n                            <select class=\"form-control\" formControlName=\"category_id\">\r\n                                <option *ngFor=\"let category of _categories\" [value]=\"category.id\">{{category.name}}</option>\r\n                            </select>\r\n                            <small [hidden]=\"form.controls.survey.controls.category_id.pristine || !form.controls.survey.controls.category_id.hasError('required')\" class=\"inputError\">Category is required.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-- list of questions -->\r\n                <div formArrayName=\"questions\" class=\"row\">\r\n\r\n                    <div *ngFor=\"let question of form.controls.questions.controls; let i=index\" class=\"img-thumbnail\" style=\"width:200%\">\r\n\r\n                        <!-- question header, show remove button when more than one question available -->\r\n                        \r\n                        <div class=\"pull-right\">\r\n                            <span *ngIf=\"i > 0\" \r\n                                (click)=\"removeQuestion(i)\"><i style=\"font-size:30px;cursor:pointer !important\" class=\"pe-7s-close\"></i>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <h4>Question {{i + 1}} [{{_questionType[i]}}]</h4>\r\n\r\n                        <!-- Angular assigns array index as group name by default 0, 1, 2, ... -->\r\n                        <div [formGroupName]=\"i\" class=\"col-md-12\">\r\n                            <!-- question -->\r\n\r\n                            <div class=\"col-md-2\" *ngIf=\"_questionType[i]=='probing'\">\r\n                                <div class=\"form-group\" style=\"float:left;margin-top:25px\">\r\n                                    <a class=\"btn btn-primary btn-fill\" [attr.href]=\"null\">IF</a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-4\" *ngIf=\"_questionType[i]=='probing'\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Question</label>\r\n                                    <select class=\"form-control\" formControlName=\"question_number\">\r\n                                        <option value=\"\">Select Question Number</option>\r\n                                        <option [value]=\"j\" *ngFor=\"let qtn of form.controls.questions.controls;let j=index\" [hidden]=\"j>=i\">Question {{j+1}}</option>\r\n                                    </select>\r\n                                    <small [hidden]=\"form.controls.questions.controls[i].controls.question_number.pristine || !form.controls.questions.controls[i].controls.question_number.hasError('required')\" class=\"inputError\">Question number is required.</small>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-2\" *ngIf=\"_questionType[i]=='probing'\">\r\n                                <div class=\"form-group\" style=\"\">\r\n                                    <label>Equality</label>\r\n                                    <select class=\"form-control\" formControlName=\"equality\">\r\n                                        <option value=\"\">Select Equality</option>\r\n                                        <option [value]=\"'=='\">Is</option>\r\n                                        <option [value]=\"'!='\">Is Not</option>\r\n                                        <option [value]=\"'*'\">Any</option>\r\n                                    </select>\r\n                                    <small [hidden]=\"form.controls.questions.controls[i].controls.equality.pristine || !form.controls.questions.controls[i].controls.equality.hasError('required')\" class=\"inputError\">Equality is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-md-4\" *ngIf=\"_questionType[i]=='probing'\">\r\n                                <div class=\"form-group\" [hidden]=\"!form.controls.questions.controls[i].controls.expected_answer.hasError('required')\">\r\n                                    <label>Answer</label>\r\n                                    <select class=\"form-control\" formControlName=\"expected_answer\">\r\n                                        <option value=\"\">Select Answer</option>\r\n                                        <option *ngFor=\"let response of _responses\" [value]=\"response.id\">{{response.name}}</option>\r\n                                    </select>\r\n                                    <small [hidden]=\"form.controls.questions.controls[i].controls.expected_answer.pristine || !form.controls.questions.controls[i].controls.expected_answer.hasError('required')\" class=\"inputError\">Answer is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Question</label>\r\n                                    <textarea rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"question\"></textarea>\r\n                                    \r\n                                    <small [hidden]=\"form.controls.questions.controls[i].controls.question.pristine || !form.controls.questions.controls[i].controls.question.hasError('required')\" class=\"inputError\">\r\n                                        Question is required\r\n                                    </small>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- Start Responses -->\r\n                            <div formArrayName=\"responses\" class=\"row\">\r\n\r\n                                <a class=\"btn btn-primary btn-fill pull-right\" (click)=\"addResponse(i)\">Add Response</a>\r\n\r\n                                <div *ngFor=\"let response of question.controls.responses.controls; let j=index\">\r\n\r\n                                    <!-- response header, show remove button when more than one question available -->\r\n\r\n                                    <!-- Angular assigns array index as group name by default 0, 1, 2, ... -->\r\n                                    <div [formGroupName]=\"j\" class=\"col-md-2\">\r\n\r\n                                        <div class=\"pull-right\">\r\n                                            <span *ngIf=\"j > 0\" \r\n                                                (click)=\"removeResponse(i,j)\"><i style=\"font-size:15px;cursor:pointer !important\" class=\"pe-7s-close\"></i>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <!-- question -->\r\n                                        <div class=\"form-group\">\r\n                                            <label>Response {{j + 1}}</label>\r\n                                            <select class=\"form-control\" formControlName=\"response_id\">\r\n                                                <option value=\"\">Select Response</option>\r\n                                                <option *ngFor=\"let response of _responses\" [value]=\"response.id\">{{response.name}}</option>\r\n                                            </select>\r\n                                          \r\n                                            <small [hidden]=\"form.controls.questions.controls[i].controls.responses.controls[j].controls.response_id.pristine || !form.controls.questions.controls[i].controls.responses.controls[j].controls.response_id.hasError('required')\"  class=\"inputError\">\r\n                                                Response is required\r\n                                            </small>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n                            <!----- End Responses --->\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <a class=\"btn btn-default btn-fill pull-right\" (click)=\"addQuestion('probing')\">Add Question</a>\r\n                    <!--<a class=\"btn btn-default btn-fill pull-right\" (click)=\"addQuestion('objective')\">Obj Question</a>-->\r\n                    <!--\r\n                    <div class=\"col-md-4 btn-fill pull-right\">\r\n                        <div class=\"form-group\">\r\n                            <label>Add Question</label>\r\n                            <select class=\"btn btn-default btn-fill pull-right\" (change)=\"addQuestion($event.target.value)\">\r\n                                <option>Select Type</option>\r\n                                <option value=\"probing\">Probing</option>\r\n                                <option value=\"objective\">Objective</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    -->\r\n                    \r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-info btn-fill pull-left\" [disabled]=\"!form.valid\">Add Survey</button>\r\n                <div class=\"clearfix\"></div>\r\n            </form>\r\n        </div>\r\n    </my-content>\r\n    `\r\n})\r\n\r\nexport class AddSurveyComponent implements OnInit {\r\n\r\n    private form;\r\n\r\n    private _branches;\r\n\r\n    private _categories;\r\n\r\n    private _responses;\r\n\r\n    private _categoryList = [];\r\n\r\n    private _options = {\r\n        position: [\"top\", \"right\"],\r\n        timeOut: 9000,\r\n        lastOnBottom: true\r\n    }\r\n\r\n    private _questionType = [];\r\n\r\n    private _addQuestionBox = '';\r\n\r\n    constructor(\r\n                private _surveyService: SurveyService, \r\n                private _fb: FormBuilder,\r\n                private _branchService: BranchService,\r\n                private _catService: CategoryService,\r\n                private _miscService: MiscService,\r\n                private _notification: NotificationsService){}\r\n\r\n     ngOnInit(){\r\n\r\n        this._catService.getCategories().subscribe(\r\n            result => this._categories = result.categories,\r\n            error => console.log(error)\r\n        );\r\n\r\n        this._miscService.getResponses().subscribe(\r\n            result => this._responses = result.responses,\r\n            error => console.log(error)\r\n        );\r\n\r\n        this.form = this._fb.group({\r\n            survey: this.initSurvey(),\r\n            questions: this._fb.array([\r\n                //this.addQuestion('objective'),\r\n                this._fb.group({\r\n                    question: ['', Validators.required],\r\n                    responses: this._fb.array([\r\n                        this.initResponse(),\r\n                    ]) \r\n                })\r\n            ])\r\n        });\r\n\r\n        this._questionType[0]='objective';\r\n        \r\n    }\r\n\r\n    add(model: SurveyInterface, isValid){\r\n        if(!isValid) return;\r\n        \r\n        this._surveyService.addSurvey(model).subscribe(\r\n            result => this._notification.success('Success', result.success),\r\n            error => this._notification.error('Error', error)\r\n        );\r\n    }\r\n\r\n    initSurvey() {\r\n        return this._fb.group({\r\n            title: ['', Validators.required],\r\n            category_id: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    initQuestion(qtnType = 'objective') {\r\n        if(qtnType=='probing') return this.probQuestion(); \r\n            else return this.objectiveQuestion();\r\n    }\r\n\r\n    objectiveQuestion() {\r\n        return this._fb.group({\r\n            question: ['', Validators.required],\r\n            responses: this._fb.array([\r\n                this.initResponse(),\r\n            ]) \r\n        });\r\n    }\r\n\r\n    probQuestion() {\r\n\r\n        const group = this._fb.group({\r\n            question_number: ['', Validators.required],\r\n            equality: ['', Validators.required],\r\n            expected_answer: [\r\n                '',\r\n                Validators.compose([\r\n                    ConditionalValidator.conditional(\r\n                        group => group.controls.equality.value != '*',\r\n                        Validators.required\r\n                    )\r\n                ])\r\n            ],\r\n            question: ['', Validators.required],\r\n            responses: this._fb.array([\r\n                this.initResponse(),\r\n                ]) \r\n        });\r\n\r\n        return group;\r\n\r\n    }\r\n\r\n    initResponse() {\r\n        return this._fb.group({\r\n            response_id: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    addQuestion(qtnType) {\r\n        console.log(qtnType);\r\n        const control = <FormArray>this.form.controls['questions'];\r\n        control.push(this.initQuestion(qtnType));\r\n        this._questionType[control.length-1]=qtnType;\r\n    }\r\n\r\n    removeQuestion(i: number) {\r\n        const control = <FormArray>this.form.controls['questions'];\r\n        control.removeAt(i);\r\n    }\r\n\r\n    addResponse(parentIndex: number) {\r\n        const control = <FormArray>this.form.controls['questions'].controls[parentIndex].controls['responses'];\r\n        if( control.length === 5 ) {\r\n            alert(\"Limit of 5 responses reached.\");\r\n            return;\r\n        }\r\n        control.push(this.initResponse());\r\n    }\r\n\r\n    removeResponse(parentIndex: number, childIndex: number) {\r\n        const control = <FormArray>this.form.controls['questions'].controls[parentIndex].controls['responses'];\r\n        control.removeAt(childIndex);\r\n    }\r\n\r\n }\r\n"],"sourceRoot":"/source/"}